import Head from 'next/head'
import React from "react";
import NavBar from '../../components/navbar'
import { useRouter } from 'next/router';
import { useSession, signIn, signOut } from "next-auth/react";
import { getServerSession } from "next-auth";
import Lottie from "lottie-react";
import loginAnimation from "../../public/login.json";
import Image from 'next/image'
import { authOptions } from './api/auth/[...nextauth]'


export default function LoginPage() {

  const router = useRouter();

  const { data: session } = useSession()

  return (
    <>
      <Head>
        <title>OnlyPuns</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/onlypuns.png" />
      </Head>
      <main>
        <NavBar />
        <div className="fixed top-0 left-0 w-full h-full flex flex-col items-center justify-center">
            <div className="flex flex-col items-center justify-center bg-white w-1/2 h-1/2 rounded-lg">
                <Lottie animationData={loginAnimation} loop={true} className="w-[200px] h-auto"/>
                <h2 className="text-gray-700 font-bold text-2xl my-6">Please Login</h2>
                <span className="flex flex-row items-center justify-center bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full my-2"
                    onClick={()=>signIn('google')}>
                    <Image alt="google icon" width={30} height={30} src="/icons/google.png" className="w-4 h-4 mr-2" />
                    Login with Google
                </span>
                <span className="flex flex-row items-center justify-center bg-purple-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full my-2"
                    onClick={()=>signIn('github')}>
                    <Image alt="github icon" width={30} height={30} src="/icons/github.png" className="w-4 h-4 mr-2" />
                    Login with GitHub
                </span>
                <p className="text-gray-900 text-sm my-4 underline cursor-pointer"
                    onClick={()=>router.push('/puns')}>
                    Continue as Guest
                </p>
                {/* cancel */}
                <p className="text-gray-900 text-sm my-4 underline cursor-pointer"
                    onClick={()=>router.push('/')}>
                    Back
                </p>
            </div>
        </div>
      </main>
    </>
  )
}

export async function getServerSideProps(context) {
    const session = await getServerSession(context.req, context.res, authOptions)
  
    if (session) {
      //redirect to login page
      return {
        redirect: {
          destination: "/puns",
          permanent: false,
        },
      }
    }
  
    return {
      props: {
        session,
      },
    }
}

